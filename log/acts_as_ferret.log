# Logfile created on Sat Mar 07 16:44:34 +0000 2009 by /
Will use local index.
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] rebuild index with models: []
[agenda_doc] reopening index at /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:content, :who, :title]
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:content, :who, :title]
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:content, :who, :title]
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:content, :who, :title]
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/minutes_doc
[minutes_doc] rebuild index with models: []
[minutes_doc] reopening index at /Users/jonathanmarkwell/temp/rewiredstate/index/development/minutes_doc
[minutes_doc] register class MinutesDoc with index minutes_doc
[minutes_doc] default field list for index minutes_doc: [:content, :who, :title]
index_for [MinutesDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[minutes_doc] stored_fields: nil
[minutes_doc] query: hello
-->+(content:hello who:hello title:hello) +(class_name:MinutesDoc)
[minutes_doc] now retrieving records from AR with options: {}
[minutes_doc] 0 results from AR: []
Query: hello
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: hello
-->+(content:hello who:hello title:hello) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: hello
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: Hello
-->+(content:hello who:hello title:hello) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: Hello
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(content:test who:test title:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: markwell
-->+(content:markwell who:markwell title:markwell) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: markwell
total hits: 0, results delivered: 0
Will use local index.
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:content, :who, :title]
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: markwell
-->+(content:markwell who:markwell title:markwell) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: markwell
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: markwell
-->+(content:markwell who:markwell title:markwell) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: markwell
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: markwell
-->+(content:markwell who:markwell title:markwell) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: markwell
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: watson
-->+(content:watson who:watson title:watson) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: watson
total hits: 0, results delivered: 0
Will use local index.
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:content, :who, :title]
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:limit=>nil, :offset=>nil}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(content:test who:test title:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:who, :title, :content]
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
Will use local index.
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:title, :content, :who]
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(title:test content:test who:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(title:test content:test who:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(title:test content:test who:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(title:test content:test who:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(title:test content:test who:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] rebuild index with models: []
[agenda_doc] reopening index at /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:title, :who, :content]
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(title:test who:test content:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
Will use local index.
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:title, :content, :who]
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: sdfsd
-->+(title:sdfsd content:sdfsd who:sdfsd) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: sdfsd
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: sdfsd
-->+(title:sdfsd content:sdfsd who:sdfsd) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: sdfsd
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: test
-->+(title:test content:test who:test) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: test
total hits: 0, results delivered: 0
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:title, :content, :who]
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: cycle
-->+(title:cycle content:cycle who:cycle) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: cycle
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: sdfsd
-->+(title:sdfsd content:sdfsd who:sdfsd) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: sdfsd
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: sdfsd
-->+(title:sdfsd content:sdfsd who:sdfsd) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: sdfsd
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: sdfsd
-->+(title:sdfsd content:sdfsd who:sdfsd) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: sdfsd
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: sdfsd
-->+(title:sdfsd content:sdfsd who:sdfsd) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: sdfsd
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: sdfsd
-->+(title:sdfsd content:sdfsd who:sdfsd) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: sdfsd
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: percent
-->+(title:percent content:percent who:percent) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: percent
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: 
-->+() +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: 
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: ds
-->+(title:ds content:ds who:ds) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: ds
total hits: 0, results delivered: 0
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] refusing re-registration of class AgendaDoc
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: meeting
-->+(title:meeting content:meeting who:meeting) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: meeting
total hits: 0, results delivered: 0
Will use local index.
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:title, :content, :who]
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: meeting
-->+(title:meeting content:meeting who:meeting) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: meeting
total hits: 0, results delivered: 0
Will use local index.
Will use remote index server which should be available at druby://localhost:9010
using index in /Users/jonathanmarkwell/temp/rewiredstate/index/development/agenda_doc
[agenda_doc] register class AgendaDoc with index agenda_doc
[agenda_doc] default field list for index agenda_doc: [:title, :content, :who]
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: meeting
-->+(title:meeting content:meeting who:meeting) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: meeting
total hits: 0, results delivered: 0
index_for [AgendaDoc(id: integer, title: string, who: string, date: datetime, content: text, created_at: datetime, updated_at: datetime, strdate: string)]
options: {:per_page=>2, :offset=>0, :page=>1, :limit=>2}
ar_options: {}
[agenda_doc] stored_fields: nil
[agenda_doc] query: meeting
-->+(title:meeting content:meeting who:meeting) +(class_name:AgendaDoc)
[agenda_doc] now retrieving records from AR with options: {}
[agenda_doc] 0 results from AR: []
Query: meeting
total hits: 0, results delivered: 0
